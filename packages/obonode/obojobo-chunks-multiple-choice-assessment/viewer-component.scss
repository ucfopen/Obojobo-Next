@import '~styles/includes';

.component.obojobo-draft--chunks--mc-assessment {
	$color-border: transparentize($color-shadow, 0.25);

	@mixin correct() {
		content: '✔';
		position: absolute;
		top: 0.65em;
		display: block;
		color: $color-correct;
		font-size: 2.5em;
		transform: translate(-50%, -50%);
		left: 0.6em;
		animation: obojobo-draft--animation--fadein $duration-animation-default * 2;

		@include mq($until: desktop) {
			font-size: 1.5em;
			top: 1.1em;
		}

		@include mq($until: tablet) {
			font-size: 1.2em;
			top: 0.6em;
			left: 1.1em;
		}
	}

	@mixin incorrect() {
		content: '✖';
		position: absolute;
		top: 0.65em;
		display: block;
		color: $color-incorrect;
		font-size: 2.5em;
		transform: translate(-50%, -50%);
		left: 0.6em;
		animation: obojobo-draft--animation--fadein $duration-animation-default * 2;

		@include mq($until: desktop) {
			font-size: 1.5em;
			top: 1.1em;
		}

		@include mq($until: tablet) {
			font-size: 1.2em;
			top: 0.6em;
			left: 1.1em;
		}
	}

	padding-bottom: 0;
	padding-top: 0;

	.obojobo-draft--chunks--mc-assessment--mc-choice {
		border-bottom: 1px solid $color-border;
		padding-top: 0;
		padding-bottom: 0;
		display: inline-block;

		&:last-child {
			border-bottom: none;
		}
	}

	.obojobo-draft--chunks--mc-assessment--mc-answer {
		padding-top: 0;
		padding-bottom: 0;
		padding-left: 2em;

		@include mq($until: desktop) {
			padding-left: 1.5em;
		}

		@include mq($until: mobileLandscape) {
			padding-left: 1em;
		}
	}

	&.is-scored {
		// These two rules, one for pick-all and one for the others, could be combined but
		// don't - IE11 has a bug that applies multiple sizes in pseudo elements :(
		&.is-response-type-pick-one .obojobo-draft--chunks--mc-assessment--mc-choice,
		&.is-response-type-pick-one-multiple-correct .obojobo-draft--chunks--mc-assessment--mc-choice,
		&.is-response-type-pick-all .obojobo-draft--chunks--mc-assessment--mc-choice {
			&.is-type-chosen-correctly {
				// Do not include the checkmark on review
				&::before {
					@include correct();
				}

				background: transparentize($color-correct, 0.9);
			}

			&.is-type-should-not-have-chosen {
				// Do not include the x on review
				&::before {
					@include incorrect();
				}

				background: transparentize($color-incorrect, 0.9);
			}

			&.is-type-chosen-survey {
				background: transparentize($color-survey, 0.9);
			}
		}
	}

	// prettier-ignore
	&.is-scored.is-not-correct.is-response-type-pick-all .obojobo-draft--chunks--mc-assessment--mc-choice.is-type-chosen-correctly {
		background: transparentize($color-highlight, 0.8);
	}

	&.is-mode-review {
		.submit-and-result-container {
			margin-top: 0;
			min-height: inherit;

			@include mq($until: tablet) {
				margin-top: 1em;
			}
		}

		.result-container .result {
			animation: none;
			transform: none;
		}

		&.is-scored {
			// These two rules, one for pick-all and one for the others, could be combined but
			// don't - IE11 has a bug that applies multiple sizes in pseudo elements :(
			&.is-response-type-pick-one .obojobo-draft--chunks--mc-assessment--mc-choice,
			&.is-response-type-pick-one-multiple-correct .obojobo-draft--chunks--mc-assessment--mc-choice,
			&.is-response-type-pick-all .obojobo-draft--chunks--mc-assessment--mc-choice {
				// Only show unchosen correct answers in review
				&.is-type-chosen-correctly,
				&.is-type-should-not-have-chosen {
					&::before {
						content: '';
					}
				}

				&.is-type-could-have-chosen {
					background: transparentize($color-alt-correct, 0.9);
				}

				&.is-type-should-have-chosen {
					background: transparentize($color-unchosen-correct, 0.9);
				}
			}
		}
	}

	.obojobo-draft--components--flag {
		position: absolute;
		left: -5.3em;
		top: 1.1em;

		&.is-size-small {
			left: -1.9em;
			top: 0.3em;
			margin-top: -0.5em;
		}
	}
}
