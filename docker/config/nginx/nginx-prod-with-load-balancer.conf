worker_processes auto;
error_log /var/log/nginx/error.log;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 5120;
    client_max_body_size 5M;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    index index.html index.htm;

    # TODO: gzip is implemented in node right now
    # gzip on;
    # gzip_vary on;
    # gzip_comp_level 6;
    # gzip_min_length 1000;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_proxied expired no-cache no-store private auth;
    # gzip_disable "MSIE [1-6]\.";
    # gzip_types application/javascript
    #             application/x-font
    #             application/x-font-opentype
    #             application/x-font-otf
    #             application/x-font-truetype
    #             application/x-font-ttf
    #             application/x-javascript
    #             application/xhtml+xml
    #             application/xml
    #             font/opentype
    #             font/otf
    #             font/ttf
    #             image/svg+xml
    #             image/x-icon
    #             text/css
    #             text/javascript
    #             text/plain
    #             text/xml
    #             text/html
    #             image/svg+xml;


    upstream obojobo_upstream {
        server app:3000;
        keepalive 64;
    }

    server {
        listen  *:80;
        server_name _;

        # Forward ip addresses from the load balancer
        set_real_ip_from 10.0.0.0/8;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # redirect to https behind an aws load balancer
        if ($http_x_forwarded_proto = "http") {
            rewrite  ^/(.*)$  https://$host/$1 permanent;
        }

        # tells the browser to not allow downgrading to http
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";

        # a quick route to test that nginx is running with our config
        location /webserver-status {
            access_log off;
            return 200 'Webserver is OK';
            add_header Content-Type text/plain;
            break;
        }

        # main config for web app
        location / {
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            #proxy_set_header Upgrade $http_upgrade; # needed for websockets
            #proxy_set_header Connection "upgrade"; # needed for websockets

            proxy_pass http://obojobo_upstream/;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_read_timeout 240s;
        }
    }
}
